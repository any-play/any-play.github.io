window.Headers=window.Headers||(()=>{'use strict';function j(p){if('string'!=typeof p&&(p+=''),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(p))throw new TypeError('Invalid character in header field name');return p.toLowerCase()}const k=new WeakMap,l=p=>k.get(p),m=p=>'string'==typeof p?p:p+'',n=p=>null!=p&&'function'==typeof p[Symbol.iterator];class o{constructor(p){if(k.set(this,Object.create(null)),n(p))for(let[q,r]of p)this.append(q,r);else if(p)for(let q of Object.getOwnPropertyNames(p))this.append(q,p[q])}append(p,q){let r=l(this);p=j(p),q=m(q),r[p]||(r[p]=[]),r[p].push(q)}delete(p){delete l(this)[j(p)]}*entries(){let p=l(this);for(let q in p)yield[q,p[q].join(',')]}get(p){let q=l(this);return p=j(p),q[p]?q[p][0]:null}has(p){return j(p)in l(this)}*keys(){for(let[p]of this)yield p}set(p,q){l(this)[j(p)]=[m(q)]}*values(){for(let[p,q]of this)yield q}[Symbol.iterator](){return this.entries()}get[Symbol.toStringTag](){return'Headers'}}return o})();
